---
import Layout from '../layouts/Layout.astro'
import Hero from '../components/Hero.astro'
import Button from '../components/Button.astro'
import BlogCard from '../components/BlogCard.astro'
import { getCollection } from 'astro:content'
import ProjectCard from './ProjectCard.astro'
import DynamicProjectCard from './DynamicProjectCard.astro'
interface Props {
    tag: string
    count: number
}
const { tag, count = 2 } = Astro.props

const projectsEntries = await getCollection('projects'),
    filteredEntries =
        tag === 'alle'
            ? projectsEntries
            : projectsEntries.filter((entry: any) =>
                  entry.data.tags?.includes(tag)
              )
const response = await fetch(`${import.meta.env.PUBLIC_STRAPI_API}project-lists?populate[images][fields]&populate[tags][fields]&populate[tags][slug]`)
const responseData = await response.json();
const projectData = responseData.data;

// const projects = filteredEntries.slice(0, count)
/**
 * @todo Filtering of Projects still pending
 */
const projects = projectData.slice(0, count)
---

<section class="pb-32">
    <h2 class="mb-8 px-4">Arbeiten, auf die wir stolz sind.</h2>
    <section class="grid grid-cols-1 md:grid-cols-2 gap-8 px-4 pb-8">
        {
            projects.map((entry: any) => (
                <DynamicProjectCard
                title={entry.attributes.title}
                image={entry.attributes.images.data?.attributes?.formats.medium.url}
                tags={entry.attributes.tags.data}
                slug={entry.attributes.slug}
                />
            ))
        }
    </section>
    <div class="flex justify-end px-4">
        <Button text="alle Projekte" link="/projects" />
    </div>
</section>
